"use strict";
/*
 * numberlines.js
 * Numbers lines in <pre> blocks automatically; works with numberlines.css
 * David J. Birnbaum, djbpitt@gmail.com, http://www.obdurodon.org
 * 2014-11-16 Initial version
 * 2014-11-18 Change from load event to DOMContentLoaded; reduces FOUT
 * 
 * To do:
 * Use ranges to preserve internal markup
 * Add horizontal scrolling that doesn't intrude into padding (nested <div>?)
 * Use @class instead of @id to attach; reset numbering in CSS to support multiples
 * Use private namespace or anonymous functions 
 *
 * Based on http://bililite.com/blog/2012/08/05/line-numbering-in-pre-elements/
# documentFragment based on http://ejohn.org/blog/dom-documentfragments/
 */
function numberLines () {
    /*
     * Finds <pre> with @id of 'block', splits into lines, wraps <span> tags around
     * the lines, replaces original <pre> contents with lines all tagged as <span>
     */
    var block = document.getElementById('block');
    var lines = block.textContent.split('\n');
    var replacement = document.createDocumentFragment();
    replacement.id = 'block';
    for (var i = 0; i < lines.length; i++) {
        var newLine = document.createElement('span');
        newLine.textContent = lines[i];
        replacement.appendChild(newLine);
        if (i < lines.length - 1) {
            var eol = document.createTextNode('\n');
            replacement.appendChild(eol);
        }
    }
    block.innerHTML = "";
    block.appendChild(replacement.cloneNode(true));
}
window.addEventListener('DOMContentLoaded', numberLines, false);